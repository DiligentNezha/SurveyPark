<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	<context:component-scan base-package="io.vicp.goradical.surveypark.dao.impl,
						  io.vicp.goradical.surveypark.service.impl,
						  io.vicp.goradical.surveypark.struts2.action,
						  io.vicp.goradical.surveypark.listener"/>
	<!-- 导入资源文件 -->
	<context:property-placeholder location="classpath:db.properties"/>

	<!-- 配置 C3P0 数据源 主库 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="${jdbc.user}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="driverClass" value="${jdbc.driverClass}"/>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>

		<property name="initialPoolSize" value="${jdbc.initPoolSize}"/>
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
	</bean>

	<!-- 配置 C3P0 数据源 从库-->
	<bean id="dataSource_1" parent="dataSource">
		<property name="jdbcUrl" value="${jdbc.jdbcUrl_1}"/>
	</bean>

	<!-- 数据源路由器 -->
	<bean id="dataSourceRouter" class="io.vicp.goradical.surveypark.datasource.SurveyParkDataSourceRouter">
		<!-- 数据源集合 -->
		<property name="targetDataSources">
			<map>
				<entry key="odd" value-ref="dataSource"/>
				<entry key="even" value-ref="dataSource_1"/>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSource"/>
	</bean>

	<!-- 配置 SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 注入数据源路由器 -->
		<property name="dataSource" ref="dataSourceRouter"/>
		<property name="configLocation" value="classpath:hibernate.cfg.xml"/>
		<property name="mappingLocations">
			<list>
				<value>classpath:io/vicp/goradical/surveypark/model/*.hbm.xml</value>
				<value>classpath:io/vicp/goradical/surveypark/model/security/*.hbm.xml</value>
				<value>classpath:io/vicp/goradical/surveypark/model/other/*.hbm.xml</value>
			</list>
		</property>
	</bean>

	<!--配置 Spring 的声明式事务-->
	<!--1. 配置 hibernate 的事务管理器-->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<!-- 2. 配置事务属性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 写操作 -->
			<tx:method name="save*" propagation="REQUIRED" isolation="DEFAULT"/>
			<tx:method name="update*" propagation="REQUIRED" isolation="DEFAULT"/>
			<tx:method name="delete*" propagation="REQUIRED" isolation="DEFAULT"/>
			<tx:method name="batch*" propagation="REQUIRED" isolation="DEFAULT"/>

			<!-- 读操作 -->
			<tx:method name="load*" propagation="REQUIRED" isolation="DEFAULT" read-only="true"/>
			<tx:method name="get*" propagation="REQUIRED" isolation="DEFAULT" read-only="true"/>
			<tx:method name="find*" propagation="REQUIRED" isolation="DEFAULT" read-only="true"/>

			<tx:method name="*" propagation="REQUIRED" isolation="DEFAULT"/>
		</tx:attributes>
	</tx:advice>

	<!-- 日志记录 -->
	<bean id="logger" class="io.vicp.goradical.surveypark.advice.Logger"/>

	<!-- 3. 配置事务切入点, 再把事务属性和事务切入点关联起来 -->
	<aop:config>
		<!-- 事务通知 -->
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* *..*Service.*(..))" order="1"/>
		<!-- 切入点通知 -->
		<aop:aspect id="loggerAspect" ref="logger" order="0">
			<aop:around method="record" pointcut="(execution(* *..*Service.save*(..))
											or execution(* *..*Service.update*(..))
											or execution(* *..*Service.delete*(..))
											or execution(* *..*Service.batch*(..))
											or execution(* *..*Service.new*(..))
											or execution(* *..*Service.move*(..))
											or execution(* *..*Service.clear*(..))
											or execution(* *..*Service.toggle*(..)))
											and !bean(logService)"/>
		</aop:aspect>
	</aop:config>

</beans>
